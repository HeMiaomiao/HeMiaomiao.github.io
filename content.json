{"meta":{"title":"Miaomiao's Blog","subtitle":"","description":"��ӭ�����ҵĲ���","author":"Miaomiao","url":"https://hemiaomiao.github.io","root":"/"},"pages":[{"title":"about","date":"2020-01-10T14:14:36.000Z","updated":"2021-01-13T11:32:13.479Z","comments":false,"path":"about/index.html","permalink":"https://hemiaomiao.github.io/about/index.html","excerpt":"","text":"[さくら荘のmiaomiao] 与&nbsp; miaomiao&nbsp; （ 真（ま）白（しろ） ） 对话中... bot_ui_ini()"},{"title":"links","date":"2020-01-10T15:11:06.000Z","updated":"2021-01-22T06:40:36.912Z","comments":true,"path":"links/index.html","permalink":"https://hemiaomiao.github.io/links/index.html","excerpt":"","text":""},{"title":"tags","date":"2020-01-12T14:14:16.000Z","updated":"2021-01-13T11:11:39.799Z","comments":true,"path":"tags/index.html","permalink":"https://hemiaomiao.github.io/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"Java面试题总结","slug":"Java面试题总结","date":"2020-01-13T14:16:01.000Z","updated":"2021-01-25T07:11:29.653Z","comments":true,"path":"2020/01/13/Java面试题总结/","link":"","permalink":"https://hemiaomiao.github.io/2020/01/13/Java%E9%9D%A2%E8%AF%95%E9%A2%98%E6%80%BB%E7%BB%93/","excerpt":"","text":"一.Java基础1. 面向过程和面向对象的区别面向过程的性能比面向对象高，但是面向对象容易维护、容易复用、容易扩展 2. Java的数据类型(1) 基本数据类型 ： 直接赋值就可以① 整型 （byte、short、long、int）② 字符型 （char）③ 浮点型 （float、double）④ 布尔型 （boolean） (2) 引用数据类型 ： 通过关键字new创建对象，然后把这个对象赋给相应的变量String类型是引用数据类型，它比较特殊，可以通过关键字new来创建对象，也可以通过字符串直接赋值。比如：Strings = new String(“abc”);Strings = “abc”; 3. equals和==的区别 ==用于基本数据类型的变量，比较的是变量的值是否相等 ==用于引用数据类型的变量，比较的是变量所指向的对象的堆内存地址是否相同 equals方法只能比较引用数据类型的变量，不能用于比较基本数据类型的变量。 equals方法如果没有重写，比较的是变量所指向的对象的堆内存地址是否相同 equals方法如果重写了，要看是如何重写的，像String类内部重写了equals方法，比较的是变量所指向的对象的内容是否相同 注：引用数据类型的变量也称为对象的引用 4. Java的内存机制5. 面向对象的特征 封装 :(1) 概念 : 将类的某些信息隐藏在类的内部，只能通过该类提供的公共方法来对隐藏的信息进行操作和访问(2) 实现步骤 : 一般是把属性限制为private私有，封装在一个类里面， 对每个私有属性提供public公共的setter和getter方法例如：public class Person&#123; private String name; private int age;​ public int getAge()&#123; return age; &#125;​ public String getName()&#123; return name; &#125;​ public void setAge(int age)&#123; this.age = age; &#125;​ public void setName(String name)&#123; this.name = name; &#125;&#125;/* F文件名 : RunEncap.java */public class RunEncap&#123; public static void main(String args[])&#123; EncapTest encap = new EncapTest(); encap.setName(&quot;James&quot;); encap.setAge(20); encap.setIdNum(&quot;12343ms&quot;); System.out.print(&quot;Name : &quot; + encap.getName()+ &quot; Age : &quot;+ encap.getAge()); &#125;&#125; 以上代码编译运行结果如下:Name : James Age : 20 public方法是外部类访问该类成员变量的入口任何要访问类中私有成员变量的类都要通过这些getter和setter方法 继承 : 子类通过extends关键字可以继承父类的所有非私有属性和方法 多态 :(1) 概念 ： 同一个行为具有多个不同表现形式(2) 多态存在的三个必要条件 ：① 继承② 重写 ： 子类对父类中某些方法进行重新定义③ 向上转型 ： 父类引用变量指向子类对象，Parent p = new Child();(3) 多态的定义格式 :父类类型 变量名 = new 子类类型();(4) 多态的调用过程 ：当使用多态方式调用方法时，首先检查父类中是否有该方法，如果没有，则编译错误；如果有，再去调用子类的同名方法。","categories":[{"name":"技术","slug":"技术","permalink":"https://hemiaomiao.github.io/categories/%E6%8A%80%E6%9C%AF/"}],"tags":[{"name":"Java","slug":"Java","permalink":"https://hemiaomiao.github.io/tags/Java/"}],"author":"Miaomiao"},{"title":"万能调料汁","slug":"万能调料汁","date":"2020-01-13T14:16:01.000Z","updated":"2021-03-08T04:53:16.445Z","comments":true,"path":"2020/01/13/万能调料汁/","link":"","permalink":"https://hemiaomiao.github.io/2020/01/13/%E4%B8%87%E8%83%BD%E8%B0%83%E6%96%99%E6%B1%81/","excerpt":"","text":"","categories":[{"name":"菜谱","slug":"菜谱","permalink":"https://hemiaomiao.github.io/categories/%E8%8F%9C%E8%B0%B1/"}],"tags":[],"author":"Miaomiao"},{"title":"MarkDown语法","slug":"MarkDown语法","date":"2020-01-13T14:16:01.000Z","updated":"2021-01-22T04:05:03.253Z","comments":true,"path":"2020/01/13/MarkDown语法/","link":"","permalink":"https://hemiaomiao.github.io/2020/01/13/MarkDown%E8%AF%AD%E6%B3%95/","excerpt":"","text":"1.写代码的格式：3个`+一个空格+语言类型 代码内容3个` 效果如下： hello world 2.标题## 二级标题### 三级标题 效果如下： 二级标题三级标题3.字体**文字加粗***文字倾斜****文字倾斜加粗***~~文字加删除线~~`字体粉红色标出` 效果如下： 文字加粗文字倾斜文字倾斜加粗文字加删除线字体粉红色标出 4.给文字加链接[文字内容](链接地址) 效果如下：我的博客 5.插入图片![](图片的链接地址) 效果如下： 6.列表（1）无序列表 * 列表内容 效果如下： 列表内容 （2）有序列表 1. 列表内容 效果如下： 列表内容 7.换行时缩进两字符&amp;emsp;文字内容 效果如下：&emsp;换行时缩进两字符 8.表格表头|表头|表头:-|:-:|-:内容|内容|内容内容|内容|内容 效果如下： 姓名 技能 排行 刘备 哭 大哥 关羽 打 二 9.文字内容引用&gt;引用的内容 效果如下： 奥利给","categories":[{"name":"技术","slug":"技术","permalink":"https://hemiaomiao.github.io/categories/%E6%8A%80%E6%9C%AF/"}],"tags":[{"name":"markDown","slug":"markDown","permalink":"https://hemiaomiao.github.io/tags/markDown/"}],"author":"Miaomiao"}],"categories":[{"name":"技术","slug":"技术","permalink":"https://hemiaomiao.github.io/categories/%E6%8A%80%E6%9C%AF/"},{"name":"菜谱","slug":"菜谱","permalink":"https://hemiaomiao.github.io/categories/%E8%8F%9C%E8%B0%B1/"}],"tags":[{"name":"Java","slug":"Java","permalink":"https://hemiaomiao.github.io/tags/Java/"},{"name":"markDown","slug":"markDown","permalink":"https://hemiaomiao.github.io/tags/markDown/"}]}