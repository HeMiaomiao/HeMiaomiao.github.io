{"meta":{"title":"Miaomiao's Blog","subtitle":"","description":"��ӭ�����ҵĲ���","author":"Miaomiao","url":"https://hemiaomiao.github.io","root":"/"},"pages":[{"title":"about","date":"2020-01-10T14:14:36.000Z","updated":"2021-01-13T11:32:13.479Z","comments":false,"path":"about/index.html","permalink":"https://hemiaomiao.github.io/about/index.html","excerpt":"","text":"[さくら荘のmiaomiao] 与&nbsp; miaomiao&nbsp; （ 真（ま）白（しろ） ） 对话中... bot_ui_ini()"},{"title":"links","date":"2020-01-10T15:11:06.000Z","updated":"2021-01-22T06:37:40.833Z","comments":true,"path":"links/index.html","permalink":"https://hemiaomiao.github.io/links/index.html","excerpt":"","text":""},{"title":"tags","date":"2020-01-12T14:14:16.000Z","updated":"2021-01-13T11:11:39.799Z","comments":true,"path":"tags/index.html","permalink":"https://hemiaomiao.github.io/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"万能调料汁","slug":"万能调料汁","date":"2020-01-13T14:16:01.000Z","updated":"2021-01-22T03:56:00.358Z","comments":true,"path":"2020/01/13/万能调料汁/","link":"","permalink":"https://hemiaomiao.github.io/2020/01/13/%E4%B8%87%E8%83%BD%E8%B0%83%E6%96%99%E6%B1%81/","excerpt":"","text":"","categories":[{"name":"菜谱","slug":"菜谱","permalink":"https://hemiaomiao.github.io/categories/%E8%8F%9C%E8%B0%B1/"}],"tags":[],"author":"Miaomiao"},{"title":"Java面试题总结","slug":"Java面试题总结","date":"2020-01-13T14:16:01.000Z","updated":"2021-01-22T06:33:53.073Z","comments":true,"path":"2020/01/13/Java面试题总结/","link":"","permalink":"https://hemiaomiao.github.io/2020/01/13/Java%E9%9D%A2%E8%AF%95%E9%A2%98%E6%80%BB%E7%BB%93/","excerpt":"","text":"一.Java基础1.面向过程和面向对象的区别面向过程的性能比面向对象高，但是面向对象容易维护、容易复用、容易扩展 2.Java的数据类型(1) 基本数据类型 ： 直接赋值就可以① 整型 （byte、short、long、int）② 字符型 （char）③ 浮点型 （float、double）④ 布尔型 （boolean） (2) 引用数据类型 ： 通过关键字new创建对象，然后把这个对象赋给相应的变量String类型是引用数据类型，它比较特殊，可以通过关键字new来创建对象，也可以通过字符串直接赋值。比如：Strings = new String(“abc”);Strings = “abc”; 3.面向对象的特征 封装 : 最常见的是把属性私有化封装在一个类里面，只能通过方法去访问 继承 : 子类继承父类，从而继承了父类的方法和属性 多态 : 多态分操作符的多态和类的多态。 类的多态指父类引用指向子类对象，并且有继承，有重写 抽象 : 比如一个英雄类，抽象出了name,hp这些属性，使得开发过程中更加易于理解 ①封装：将类的某些信息隐藏在类内部，不允许外部程序直接访问，而是通过该类提供的方法来实现对隐藏信息的操作和访问。②继承：继承是类与类的一种关系，是一种“is a”的关系。子类通过extends关键字可以继承父类的所有非私有属性和方法③多态：指的就是父类引用指向子类对象，调用方法时会调用子类的实现而不是父类的实现。④抽象：抽象就是忽略一个主题中与当前目标无关的那些方面，以便更充分地注意与当前目标有关的方面。抽象不打算了解全部问题，而是选择其中的一部分，暂时不用部分细节。抽象包括两个方面：过程抽象；数据抽象。 4. equals和==的区别 (1) ==用于基本数据类型的变量，比较的是变量的值是否相等(2) ==用于引用数据类型的变量，比较的是变量所指向的对象的堆内存地址是否相同 equals方法只能比较引用数据类型的变量，不能用于比较基本数据类型的变量(1) equals方法如果没有重写，比较的是变量所指向的对象的堆内存地址是否相同(2) equals方法如果重写了，要看是如何重写的，像String类内部重写了equals方法，比较的是变量所指向的对象的内容是否相同 注：引用数据类型的变量也称为对象的引用","categories":[{"name":"技术","slug":"技术","permalink":"https://hemiaomiao.github.io/categories/%E6%8A%80%E6%9C%AF/"}],"tags":[{"name":"Java","slug":"Java","permalink":"https://hemiaomiao.github.io/tags/Java/"}],"author":"Miaomiao"},{"title":"MarkDown语法","slug":"MarkDown语法","date":"2020-01-13T14:16:01.000Z","updated":"2021-01-22T04:05:03.253Z","comments":true,"path":"2020/01/13/MarkDown语法/","link":"","permalink":"https://hemiaomiao.github.io/2020/01/13/MarkDown%E8%AF%AD%E6%B3%95/","excerpt":"","text":"1.写代码的格式：3个`+一个空格+语言类型 代码内容3个` 效果如下： hello world 2.标题## 二级标题### 三级标题 效果如下： 二级标题三级标题3.字体**文字加粗***文字倾斜****文字倾斜加粗***~~文字加删除线~~`字体粉红色标出` 效果如下： 文字加粗文字倾斜文字倾斜加粗文字加删除线字体粉红色标出 4.给文字加链接[文字内容](链接地址) 效果如下：我的博客 5.插入图片![](图片的链接地址) 效果如下： 6.列表（1）无序列表 * 列表内容 效果如下： 列表内容 （2）有序列表 1. 列表内容 效果如下： 列表内容 7.换行时缩进两字符&amp;emsp;文字内容 效果如下：&emsp;换行时缩进两字符 8.表格表头|表头|表头:-|:-:|-:内容|内容|内容内容|内容|内容 效果如下： 姓名 技能 排行 刘备 哭 大哥 关羽 打 二 9.文字内容引用&gt;引用的内容 效果如下： 奥利给","categories":[{"name":"技术","slug":"技术","permalink":"https://hemiaomiao.github.io/categories/%E6%8A%80%E6%9C%AF/"}],"tags":[{"name":"markDown","slug":"markDown","permalink":"https://hemiaomiao.github.io/tags/markDown/"}],"author":"Miaomiao"}],"categories":[{"name":"菜谱","slug":"菜谱","permalink":"https://hemiaomiao.github.io/categories/%E8%8F%9C%E8%B0%B1/"},{"name":"技术","slug":"技术","permalink":"https://hemiaomiao.github.io/categories/%E6%8A%80%E6%9C%AF/"}],"tags":[{"name":"Java","slug":"Java","permalink":"https://hemiaomiao.github.io/tags/Java/"},{"name":"markDown","slug":"markDown","permalink":"https://hemiaomiao.github.io/tags/markDown/"}]}